node {
  def docker_registry = env.DOCKER_REGISTRY ?: 'registry.tarokosoftware.io'
  def docker_img = ''

  stage('Build') {
    def product_name = env.JOB_NAME ?: 'demo'
    def build_env = 'develop'
    def rails_env = 'development'
    switch (env.BRANCH_NAME) {
    case ~/^release\/.*/:
      build_env = 'staging'
      rails_env = 'staging'
    case 'master':
      build_env = 'production'
      rails_env = 'production'
      break
    default:
      error "Not support build docker image with branch name: ${env.BRANCH_NAME}"
    }

    docker.withServer(docker_registry) {
      docker_img = docker.build(
        "${build_env}/${product_name}",
        "-f kubernetes/Dockerfile --build-arg RAILS_ENV=${rails_env}"
      )
    }

    if (!docker_img) {
      error "fail to build docker image"
    }
  }

  stage('Push') {
    docker.withServer(docker_registry) {
      docker_img.push()
    }
  }

  post {
    // notify
  }
}
